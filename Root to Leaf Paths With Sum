/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
void solve(TreeNode* A, int B, int sum, vector<int> path, vector<vector<int>>& v) {
    
    if(A == NULL)
        return;
    
    sum += A->val;
    path.push_back(A->val);
    if(A->left==NULL && A->right==NULL) {
        if(sum == B) {
            v.push_back(path);
        } 
        return;
    }
    
    solve(A->left, B, sum, path, v);
    solve(A->right, B, sum, path, v);
    
}
 
vector<vector<int> > Solution::pathSum(TreeNode* A, int B) {
    vector<vector<int>> v;
    vector<int> path;
    solve(A, B, 0, path, v);
    return v;
}
