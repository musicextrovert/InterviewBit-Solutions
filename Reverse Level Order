/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
vector<int> Solution::solve(TreeNode* A) {
    vector<vector<int>> v;
    queue<TreeNode*> q;
    q.push(A);
    vector<int> temp;
    while(!q.empty()) {
        int n = q.size();
        TreeNode* t;
        while(n--) {
            t = q.front();
            q.pop();
            temp.push_back(t->val);
            if(t->right)
                q.push(t->right);
            if(t->left)
                q.push(t->left);
        }
        v.push_back(temp);
        temp.clear();
    }
    temp.clear();
    
    for(int i=v.size()-1; i>=0; i--) {
        for(int j=v[i].size()-1; j>=0; j--) {
            temp.push_back(v[i][j]);
        }
    }
    return temp;
}
